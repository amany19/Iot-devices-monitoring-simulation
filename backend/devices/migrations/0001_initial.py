# Generated by Django 5.2.4 on 2025-07-30 08:11

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0, unique=True)),
                ('code', models.CharField(default='UNKNOWN', max_length=50, unique=True)),
                ('location', models.CharField(default='UNKNOWN', max_length=100)),
                ('status', models.CharField(choices=[('on', 'On'), ('off', 'Off')], default='off', max_length=10)),
                ('temperature_min', models.FloatField(blank=True, null=True)),
                ('temperature_max', models.FloatField(blank=True, null=True)),
                ('humidity_min', models.FloatField(blank=True, null=True)),
                ('humidity_max', models.FloatField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('firmware_version', models.CharField(blank=True, max_length=50, null=True)),
                ('alert_temp_min', models.FloatField(blank=True, null=True)),
                ('alert_temp_max', models.FloatField(blank=True, null=True)),
                ('alert_humidity_min', models.FloatField(blank=True, null=True)),
                ('alert_humidity_max', models.FloatField(blank=True, null=True)),
                ('logging_interval_minutes', models.PositiveIntegerField(default=15)),
                ('button_stop_enabled', models.BooleanField(default=True)),
                ('mute_button_enabled', models.BooleanField(default=True)),
                ('alarm_tone_enabled', models.BooleanField(default=True)),
                ('storage_mode', models.CharField(blank=True, max_length=100, null=True)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Alarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alarm_type', models.CharField(choices=[('TEMP_HI', 'Temperature Too High'), ('TEMP_LO', 'Temperature Too Low'), ('HUM_HI', 'Humidity Too High'), ('HUM_LO', 'Humidity Too Low'), ('DC', 'Device Disconnected'), ('SD', 'Stop button disabled'), ('MD', 'Mute Button disabled')], max_length=10)),
                ('triggered_value', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('acknowledged', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alarms', to='devices.device')),
            ],
        ),
        migrations.AddField(
            model_name='device',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='devices.manufacturer'),
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField()),
                ('humidity', models.FloatField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readings', to='devices.device')),
            ],
        ),
    ]
